{"version":3,"file":"static/js/7004.5bddab4d.chunk.js","mappings":"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","sources":["redux/actions/categoryActions.js","views/categories/Categories.js","../node_modules/@coreui/icons/src/free/cil-check-alt.ts","../node_modules/@coreui/icons/src/free/cil-trash.ts"],"sourcesContent":["import { toast } from 'react-toastify'\nimport requests from 'src/helpers/requests'\n\nexport const postCreateCategory = (params) => (dispatch) => {\n  dispatch({ type: 'post_create_category_start', payload: params })\n\n  requests\n    .postCreateCategory(params)\n    .then(({ data }) => {\n      dispatch({ type: 'post_create_category_success', payload: data })\n      toast.success('Успешно добавлено')\n    })\n    .catch(({ response }) => {\n      dispatch({ type: 'post_create_category_error', payload: response })\n    })\n}\n\nexport const postUpdateCategory = (id, params) => (dispatch) => {\n  dispatch({ type: 'post_edit_category_start', payload: id, params })\n\n  requests\n    .postUpdateCategory(id, params)\n    .then(({ data }) => {\n      dispatch({ type: 'post_edit_category_success', payload: data })\n      toast.success('Успешно изменено')\n    })\n    .catch(({ response }) => {\n      dispatch({ type: 'post_edit_category_error', payload: response })\n    })\n}\n\nexport const postDeleteCategory = (id) => (dispatch) => {\n  dispatch({ type: 'post_delete_category_start', payload: id })\n\n  requests\n    .postDeleteCategory(id)\n    .then(({ data }) => {\n      dispatch({ type: 'post_delete_category_success', payload: data })\n      toast.success('Успешно удалено')\n    })\n    .catch(({ response }) => {\n      dispatch({ type: 'post_delete_category_error', payload: response })\n    })\n}\n\nexport const getDetailCategory = (id) => (dispatch) => {\n  dispatch({ type: 'fetch_detail_category_start', payload: id })\n\n  requests\n    .getDetailCategory(id)\n    .then(({ data }) => {\n      dispatch({ type: 'fetch_detail_category_success', payload: data })\n    })\n    .catch(({ response }) => {\n      dispatch({ type: 'fetch_detail_category_error', payload: response })\n    })\n}\n\nexport const getCategory = (params) => (dispatch) => {\n  dispatch({ type: 'fetch_category_start', payload: params })\n\n  requests\n    .getCategory(params)\n    .then(({ data }) => {\n      dispatch({ type: 'fetch_category_success', payload: data })\n    })\n    .catch(({ response }) => {\n      dispatch({ type: 'fetch_category_error', payload: response })\n    })\n}\n","import { cilCheckAlt, cilPencil, cilTrash } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport {\n  CButton,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n} from '@coreui/react'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport {\n  getCategory,\n  postCreateCategory,\n  postDeleteCategory,\n  postUpdateCategory,\n} from 'src/redux/actions/categoryActions'\nconst API = 'https://api.madad-service.uz/'\n\nconst Categories = () => {\n  const dispatch = useDispatch()\n  const categories = useSelector((state) => state.category.category)\n  const now = new Date()\n  const options = { timeZone: 'Asia/Tashkent' }\n  const dateInUzbekistan = now.toLocaleString('ru-RU', options)\n\n  useEffect(() => {\n    dispatch(getCategory())\n  }, [])\n\n  const [showModal, setShowModal] = useState({\n    show: false,\n    category: '',\n  })\n\n  const [params, setParams] = useState({\n    name_ru: '',\n    name_uz: '',\n    name_en: '',\n    photo: '',\n    date: dateInUzbekistan,\n  })\n\n  const handleClearParams = () => {\n    setParams((prev) => {\n      return {\n        ...prev,\n        name_ru: '',\n        name_uz: '',\n        name_en: '',\n        photo: '',\n      }\n    })\n  }\n\n  const [updateContent, setUpdateContent] = useState({\n    name_ru: showModal.category?.name_ru,\n    name_uz: showModal.category?.name_uz,\n    name_en: showModal.category?.name_en,\n    photo: showModal.category?.photo,\n    date: dateInUzbekistan,\n  })\n  useEffect(() => {\n    setUpdateContent({\n      name_ru: showModal.category?.name_ru,\n      name_uz: showModal.category?.name_uz,\n      name_en: showModal.category?.name_en,\n      photo: showModal.category?.photo,\n      date: dateInUzbekistan,\n    })\n  }, [showModal.show])\n\n  const handleChangeContent = (e) => {\n    const { name, value } = e.target\n    setUpdateContent((prev) => {\n      return {\n        ...prev,\n        [name]: value,\n      }\n    })\n  }\n\n  const onImageChange = (event, element) => {\n    if (window.FileReader) {\n      let newParams = {\n        ...params,\n        photo: event.target.files[0],\n      }\n      setParams(newParams)\n      const targetFile = event.target.files[0]\n      const fileReader = new FileReader()\n      if (targetFile && targetFile.type.match('image.*')) {\n        fileReader.readAsDataURL(targetFile)\n      }\n      fileReader.onload = function (e) {\n        element.src = e.target.result\n      }\n    }\n  }\n\n  const onImageUpdate = (event, element) => {\n    if (window.FileReader) {\n      let newContent = {\n        ...updateContent,\n        photo: event.target.files[0],\n      }\n      setUpdateContent(newContent)\n      const targetFile = event.target.files[0]\n      const fileReader = new FileReader()\n      if (targetFile && targetFile.type.match('image.*')) {\n        fileReader.readAsDataURL(targetFile)\n      }\n      fileReader.onload = function (e) {\n        element.src = e.target.result\n      }\n    }\n  }\n\n  const handleChangeParams = (e) => {\n    const { name, value } = e.target\n    setParams((prev) => {\n      return {\n        ...prev,\n        [name]: value,\n      }\n    })\n  }\n\n  const { step } = useSelector((state) => state.category)\n  useEffect(() => {\n    if (step === true) {\n      dispatch(getCategory())\n      setShowModal({\n        show: false,\n        category: '',\n      })\n    }\n  }, [step])\n\n  return (\n    <>\n      <CModal\n        backdrop=\"static\"\n        visible={showModal.show}\n        onClose={() => setShowModal({ show: false, category: '' })}\n      >\n        <CModalHeader>\n          <CModalTitle>Редактирование категории</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"drop-image\">\n                {!updateContent?.photo && (\n                  <>\n                    + <br />\n                    <span>Загрузить фото</span>\n                  </>\n                )}\n                <input\n                  type={'file'}\n                  id=\"drop-category-photo-input\"\n                  // accept=\"image/png, image/gif, image/jpeg, image/jpg, image/svg\"\n                  multiple={false}\n                  onChange={(e) => onImageUpdate(e, document.querySelector('#categoryUpdateImage'))}\n                />\n                <label htmlFor=\"drop-category-photo-input\">\n                  <img\n                    className=\"card-img-top\"\n                    src={API + updateContent?.photo}\n                    alt=\"\"\n                    id=\"categoryUpdateImage\"\n                  />\n                </label>\n              </div>\n              {updateContent?.photo && (\n                <CButton\n                  className=\"btn btn-danger text-white w-100 d-flex align-items-center justify-content-center gap-1 mt-2\"\n                  onClick={() => {\n                    let newContent = {\n                      ...updateContent,\n                      photo: '',\n                    }\n                    setUpdateContent(newContent)\n                  }}\n                >\n                  <CIcon icon={cilTrash} />\n                  Удалить фото\n                </CButton>\n              )}\n              <h6 className=\"mt-4\">Название (RU)</h6>\n              <input\n                value={updateContent?.name_ru}\n                name=\"name_ru\"\n                onChange={handleChangeContent}\n                className=\"form-control\"\n              />\n              <h6 className=\"mt-4\">Название (UZ)</h6>\n              <input\n                value={updateContent?.name_uz}\n                name=\"name_uz\"\n                onChange={handleChangeContent}\n                className=\"form-control\"\n              />\n              <h6 className=\"mt-4\">Название (EN)</h6>\n              <input\n                value={updateContent?.name_en}\n                name=\"name_en\"\n                onChange={handleChangeContent}\n                className=\"form-control\"\n              />\n            </div>\n          </div>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setShowModal({ show: false, category: '' })}>\n            Close\n          </CButton>\n          <CButton\n            onClick={() => dispatch(postUpdateCategory(showModal.category?._id, updateContent))}\n            color=\"primary\"\n          >\n            Save changes\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-xl-8\">\n              <h6>Список категории</h6>\n              <div className=\"list-group gap-1\">\n                {categories?.map((item, idx) => (\n                  <CDropdown key={idx} color=\"info\">\n                    <CDropdownToggle\n                      color=\"light\"\n                      className=\"d-flex align-items-center justify-content-between\"\n                    >\n                      <div className=\"d-flex align-items-center gap-3\">\n                        <img\n                          style={{ width: '20px', height: '20px', objectFit: 'contain' }}\n                          src={API + item?.photo}\n                          alt=\"\"\n                        />\n                        {item?.name_ru}\n                      </div>\n                    </CDropdownToggle>\n                    <CDropdownMenu>\n                      <CDropdownItem\n                        style={{ cursor: 'pointer' }}\n                        onClick={() =>\n                          setShowModal({\n                            show: true,\n                            category: item,\n                          })\n                        }\n                      >\n                        Редактировать\n                      </CDropdownItem>\n                      <CDropdownItem onClick={() => dispatch(postDeleteCategory(item?._id))}>\n                        Удалить\n                      </CDropdownItem>\n                    </CDropdownMenu>\n                  </CDropdown>\n                ))}\n              </div>\n            </div>\n            <div className=\"col-xl-4\">\n              <h6>Добавить новую категорию</h6>\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"drop-image\">\n                    {!params.photo && (\n                      <>\n                        + <br />\n                        <span>Загрузить фото</span>\n                      </>\n                    )}\n                    <input\n                      type={'file'}\n                      id=\"drop-photo-input\"\n                      accept=\"image/png, image/gif, image/jpeg\"\n                      multiple={false}\n                      onChange={(e) => onImageChange(e, document.querySelector('#newsCreateImage'))}\n                    />\n                    <label htmlFor=\"drop-photo-input\">\n                      <img\n                        className=\"card-img-top\"\n                        src={params.photo}\n                        alt=\"\"\n                        id=\"newsCreateImage\"\n                      />\n                    </label>\n                  </div>\n                  {params.photo && (\n                    <CButton\n                      className=\"btn btn-danger text-white w-100 d-flex align-items-center justify-content-center gap-1 mt-2\"\n                      onClick={() => {\n                        let newParams = {\n                          ...params,\n                          photo: '',\n                        }\n                        setParams(newParams)\n                      }}\n                    >\n                      <CIcon icon={cilTrash} />\n                      Удалить фото\n                    </CButton>\n                  )}\n                  <h6 className=\"mt-4\">Название (RU)</h6>\n                  <input\n                    value={params.name_ru}\n                    name=\"name_ru\"\n                    onChange={handleChangeParams}\n                    className=\"form-control\"\n                  />\n                  <h6 className=\"mt-4\">Название (UZ)</h6>\n                  <input\n                    value={params.name_uz}\n                    name=\"name_uz\"\n                    onChange={handleChangeParams}\n                    className=\"form-control\"\n                  />\n                  <h6 className=\"mt-4\">Название (EN)</h6>\n                  <input\n                    value={params.name_en}\n                    name=\"name_en\"\n                    onChange={handleChangeParams}\n                    className=\"form-control\"\n                  />\n                  <CButton\n                    onClick={() => {\n                      dispatch(postCreateCategory(params))\n                      handleClearParams()\n                    }}\n                    color=\"primary\"\n                    className=\"float-end ms-auto mt-4\"\n                  >\n                    <CIcon icon={cilCheckAlt} className=\"me-1\" />\n                    Сохранить\n                  </CButton>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Categories\n","export var cilCheckAlt = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='200.359 382.269 61.057 251.673 82.943 228.327 199.641 337.731 428.686 108.687 451.314 131.313 200.359 382.269' class='ci-primary'/>\"];\n","export var cilTrash = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M96,472a23.82,23.82,0,0,0,23.579,24H392.421A23.82,23.82,0,0,0,416,472V152H96Zm32-288H384V464H128Z' class='ci-primary'/><rect width='32' height='200' x='168' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='240' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='312' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M328,88V40c0-13.458-9.488-24-21.6-24H205.6C193.488,16,184,26.542,184,40V88H64v32H448V88ZM216,48h80V88H216Z' class='ci-primary'/>\"];\n"],"names":["postCreateCategory","params","dispatch","type","payload","requests","then","_ref","data","toast","success","catch","_ref2","response","postUpdateCategory","id","_ref3","_ref4","postDeleteCategory","_ref5","_ref6","getCategory","_ref9","_ref10","API","Categories","_showModal$category","_showModal$category2","_showModal$category3","_showModal$category4","useDispatch","categories","useSelector","state","category","dateInUzbekistan","Date","toLocaleString","timeZone","useEffect","showModal","setShowModal","useState","show","setParams","name_ru","name_uz","name_en","photo","date","updateContent","setUpdateContent","_showModal$category5","_showModal$category6","_showModal$category7","_showModal$category8","handleChangeContent","e","name","value","target","prev","handleChangeParams","step","_jsxs","_Fragment","children","CModal","backdrop","visible","onClose","_jsx","CModalHeader","CModalTitle","CModalBody","className","multiple","onChange","onImageUpdate","event","element","window","FileReader","newContent","files","targetFile","fileReader","match","readAsDataURL","onload","src","result","document","querySelector","htmlFor","alt","CButton","onClick","CIcon","icon","cilTrash","CModalFooter","color","_showModal$category9","_id","map","item","idx","CDropdown","CDropdownToggle","style","width","height","objectFit","CDropdownMenu","CDropdownItem","cursor","accept","onImageChange","newParams","cilCheckAlt"],"sourceRoot":""}