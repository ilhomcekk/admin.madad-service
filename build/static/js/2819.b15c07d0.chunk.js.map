{"version":3,"file":"static/js/2819.b15c07d0.chunk.js","mappings":"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","sources":["redux/actions/feedbackActions.js","views/widgets/WidgetsDropdown.js","views/dashboard/Dashboard.js"],"sourcesContent":["import { toast } from 'react-toastify'\nimport requests from 'src/helpers/requests'\n\nexport const postDeleteFeedback = (id) => (dispatch) => {\n  dispatch({ type: 'post_delete_feedback_start', payload: id })\n\n  requests\n    .postDeleteFeedback(id)\n    .then(({ data }) => {\n      dispatch({ type: 'post_delete_feedback_success', payload: data })\n      toast.success('Успешно удалено')\n    })\n    .catch(({ response }) => {\n      dispatch({ type: 'post_delete_feedback_error', payload: response })\n    })\n}\n\nexport const getDetailFeedback = (id) => (dispatch) => {\n  dispatch({ type: 'fetch_detail_feedback_start', payload: id })\n\n  requests\n    .getDetailFeedback(id)\n    .then(({ data }) => {\n      dispatch({ type: 'fetch_detail_feedback_success', payload: data })\n    })\n    .catch(({ response }) => {\n      dispatch({ type: 'fetch_detail_feedback_error', payload: response })\n    })\n}\n\nexport const getFeedback = (params) => (dispatch) => {\n  dispatch({ type: 'fetch_feedback_start', payload: params })\n\n  requests\n    .getFeedback(params)\n    .then(({ data }) => {\n      dispatch({ type: 'fetch_feedback_success', payload: data })\n    })\n    .catch(({ response }) => {\n      dispatch({ type: 'fetch_feedback_error', payload: response })\n    })\n}\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = () => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              26K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Users\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              $6.200{' '}\n              <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Income\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              2.49{' '}\n              <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Conversion Rate\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              44K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Sessions\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n","import React, { useEffect } from 'react'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport avatar from 'src/assets/images/avatars/avatar.png'\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\n\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFeedback } from 'src/redux/actions/feedbackActions'\nimport { Link, useNavigate } from 'react-router-dom'\n\nconst Dashboard = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    dispatch(getFeedback())\n  }, [])\n\n  const feedbacks = useSelector((state) => state.feedback.feedback)\n\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n\n  const progressExample = [\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  ]\n\n  const progressGroupExample1 = [\n    { title: 'Monday', value1: 34, value2: 78 },\n    { title: 'Tuesday', value1: 56, value2: 94 },\n    { title: 'Wednesday', value1: 12, value2: 67 },\n    { title: 'Thursday', value1: 43, value2: 91 },\n    { title: 'Friday', value1: 22, value2: 73 },\n    { title: 'Saturday', value1: 53, value2: 82 },\n    { title: 'Sunday', value1: 9, value2: 69 },\n  ]\n\n  const progressGroupExample2 = [\n    { title: 'Male', icon: cilUser, value: 53 },\n    { title: 'Female', icon: cilUserFemale, value: 43 },\n  ]\n\n  const progressGroupExample3 = [\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  ]\n\n  const tableExample = [\n    {\n      avatar: { src: avatar, status: 'success' },\n      user: {\n        name: 'Yiorgos Avraamu',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'USA', flag: cifUs },\n      usage: {\n        value: 50,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n      activity: '10 sec ago',\n    },\n  ]\n\n  return (\n    <>\n      <WidgetsDropdown />\n      {/* <CCard className=\"mb-4\">\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  {item.value} ({item.percent}%)\n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard> */}\n\n      {/* <WidgetsBrand withCharts /> */}\n\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            {/* <CCardHeader>Traffic {' & '} Sales</CCardHeader> */}\n            <CCardBody>\n              {/* <CRow>\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n                  {progressGroupExample1.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"text-medium-emphasis small\">{item.title}</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"info\" value={item.value1} />\n                        <CProgress thin color=\"danger\" value={item.value2} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Organic</div>\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n\n                  {progressGroupExample2.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"warning\" value={item.value} />\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"mb-5\"></div>\n\n                  {progressGroupExample3.map((item, index) => (\n                    <div className=\"progress-group\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value}{' '}\n                          <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\n                        </span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"success\" value={item.percent} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n              </CRow> */}\n\n              <br />\n\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell className=\"text-center\">\n                      <CIcon icon={cilPeople} />\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>Пользователь</CTableHeaderCell>\n                    <CTableHeaderCell>Телефон</CTableHeaderCell>\n                    <CTableHeaderCell>Комментария</CTableHeaderCell>\n                    <CTableHeaderCell>Дата</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {feedbacks?.map((item, index) => (\n                    <CTableRow\n                      v-for=\"item in tableItems\"\n                      key={index}\n                      onClick={() => navigate(`/feedback/${item?._id}`)}\n                      style={{ cursor: 'pointer' }}\n                    >\n                      <CTableDataCell className=\"text-center\">\n                        <CAvatar size=\"md\" src={avatar} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item?.name}</div>\n                      </CTableDataCell>\n                      <CTableDataCell>{item?.phone}</CTableDataCell>\n                      <CTableDataCell>{item?.description}</CTableDataCell>\n                      <CTableDataCell>{item?.date}</CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n"],"names":["postDeleteFeedback","id","dispatch","type","payload","requests","then","_ref","data","toast","success","catch","_ref2","response","getDetailFeedback","_ref3","_ref4","getFeedback","params","_ref5","_ref6","WidgetsDropdown","_jsxs","CRow","children","_jsx","CCol","sm","lg","CWidgetStatsA","className","color","value","_Fragment","CIcon","icon","cilArrowBottom","title","action","CDropdown","alignment","CDropdownToggle","caret","cilOptions","CDropdownMenu","CDropdownItem","disabled","chart","CChartLine","style","height","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","cilArrowTop","fill","CChartBar","barPercentage","drawTicks","Dashboard","useDispatch","navigate","useNavigate","useEffect","feedbacks","useSelector","state","feedback","cilUser","cilUserFemale","cibGoogle","cibFacebook","cibTwitter","cibLinkedin","cifUs","cibCcMastercard","xs","CCard","CCardBody","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","cilPeople","CTableBody","map","item","index","onClick","concat","_id","cursor","CTableDataCell","CAvatar","size","src","avatar","name","phone","description","date"],"sourceRoot":""}